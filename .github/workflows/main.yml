name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: PowerOutageDB
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Build and test ASP.NET Core Web API
      working-directory: ./backend/PowerOutageService
      run: |
        dotnet restore
        dotnet build --configuration Release --no-restore
        dotnet test --no-restore --verbosity normal

    - name: Build and test Angular app
      working-directory: ./frontend/power-outage-app
      run: |
        npm install
        npm run build -- --prod
        npm run test -- --watch=false

    - name: Build Docker images
      run: docker-compose build

    - name: Push Docker images to Docker Hub
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      run: |
        echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
        docker-compose push
